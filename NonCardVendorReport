--no_cache
with portal_accepted as (
  
  select 
  
  va.vendor_id 
  ,count(distinct a.id) as trips
  
  from vendor_assignments va 
  
  join audits a on a.associated_id = va.reservation_id 
    and a.audited_changes ilike '%status:% pending%accepted%' 
    and to_char(a.created_at, 'yyyy') = '2016'  
    and a.user_id in (select user_id from vendor_users)
  
   group by 1
  
  
  ),

savoya_accepted as (
  
  select 
  
  va.vendor_id 
  ,count(distinct a.id) as trips
  
  from vendor_assignments va 
  
  join audits a on a.associated_id = va.reservation_id 
    and a.audited_changes ilike '%status:% pending%accepted%' 
    and to_char(a.created_at, 'yyyy') = '2016'
    and a.user_id not in (select user_id from vendor_users)
  
   group by 1
  
  
  ),

rejected_trips as (
  
    select 
  
  va.vendor_id 
  ,count(distinct a.id) as trips
  
  from vendor_assignments va 
  
  join audits a on a.associated_id = va.reservation_id 
    and a.audited_changes ilike '%status:% pending%rejected%' 
    and to_char(a.created_at, 'yyyy') = '2016'
    and a.user_id in (select user_id from vendor_users)
  
   group by 1
  
  
  ),

portal_closed as (
  
  select 
  
  va.vendor_id 
  ,count(distinct re.reservation_id) as trips
  
  from vendor_assignments va 
  
  join reservation_events re on re.reservation_id = va.reservation_id and re.action = 'closeout'
  join audits a on a.auditable_id = re.id  
    and to_char(a.created_at, 'yyyy') = '2016'
    and a.user_id in (select user_id from vendor_users)

  
  where current = 't' 
  
   group by 1
  
  
  ),

savoya_closed as (
  
  select 
  
  va.vendor_id
  ,count(distinct re.reservation_id)  as trips
  
  from vendor_assignments va 
  
  join reservation_events re on re.reservation_id = va.reservation_id 
      and re.action = 'closeout' 
      and to_char(re.created_at, 'yyyy') = '2016'
  
  join reservation_statuses rs on rs.reservation_id = va.reservation_id and rs.canceled = 'f'
  left join portal_closed pc on pc.vendor_id = va.vendor_id
  
  where va.current='t' and re.reservation_id not in (
    
    select re.reservation_id
    from reservation_events re 
    join audits a on a.auditable_id = re.id  
    and to_char(a.created_at, 'yyyy') = '2016'
    and a.user_id in (select user_id from vendor_users)
    where re.action = 'closeout'
  )
  
  group by 1
  
  ),


Vendor_cases as (
  
  select 
  
  va.vendor_id
  ,count(distinct va.reservation_id) as trips
  
  from vendor_assignments va
  
  join reservation_cases rc on rc.reservation_id = va.reservation_id and rc.vendor_fault = 't'
  join reservations r on r.id = va.reservation_id and  to_char(r.pickup_date, 'yyyy') = '2016'
  
  where va.current = 't'
  
  group by 1
  
  ),

completed_trips as (
  
  select
  
  va.vendor_id 
  ,count(distinct re.reservation_id) as trips
  
  from vendor_assignments va 
  
  join reservation_events re on re.reservation_id = va.reservation_id and re.action = 'closeout'
  join audits a on a.auditable_id = re.id  
      and to_char(a.created_at, 'yyyy') = '2016'
  
  where current = 't' 
  
   group by 1
  
  ),

app_usage as (

 
    select
  
  va.vendor_id 
  ,count(distinct re.reservation_id) as trips
  
  from vendor_assignments va 
  
  join reservation_events re on re.reservation_id = va.reservation_id and re.action = 'closeout'
  join audits a on a.auditable_id = re.id  
      and to_char(a.created_at, 'yyyy') = '2016'
  join reservation_events re2 on re2.reservation_id = va.reservation_id and re2.action = 'en_route'
  
  where current = 't' 
  
   group by 1
  
  ),


times as (
select 


r.id
,(r.pickup_date - max(re.updated_at)) as d_time


from vendor_assignments va 
join reservations r on r.id = va.reservation_id
join reservation_statuses rs on rs.reservation_id = r.id and rs.canceled = 'f'

join reservation_events re on re.reservation_id = r.id and re.action = 'assign_driver'


where va.current = 't' and  to_char(r.pickup_date, 'yyyy') = '2016'
group by 1
),

driver_assign as (
select

v.id
, case when extract(day from (avg(t.d_time))) > 0 then  extract(day from (avg(t.d_time)))::text || ' Days, ' else '' end 
   ||
  case when extract(hour from (avg(t.d_time))) > 1 then extract(hour from (avg(t.d_time)))::text || ' Hours, ' 
       when extract(hour from (avg(t.d_time))) > 0 
        and extract(hour from (avg(t.d_time))) < 1 then extract(hour from (avg(t.d_time)))::text || ' Hour, ' 
       else '' end
   ||
  case when extract(minute from (avg(t.d_time))) > 0 then  extract(minute from (avg(t.d_time)))::text || ' Minutes '
       else ''::text end
    as times

from vendors v

join vendor_assignments va on va.vendor_id = v.id and current = 't'
join times t on t.id = va.reservation_id
  join reservations r on r.id = va.reservation_id and  to_char(r.pickup_date, 'yyyy') = '2016'

group by 1

 ),

tot_rez as (
  
  select distinct
  
  r.id
  from reservations r 
  
join reservation_statuses rs on rs.reservation_id = r.id and rs.canceled = 'f' and rs.status = 'finalized'

join reservation_events re on re.reservation_id = r.id and re.action = 'drop_passenger'
join audits a on a.auditable_id = re.id and a.audited_changes ilike '%drop_passenger%'
                                        and a.user_id in (select user_id from vendor_users)

join reservation_events re1 on re1.reservation_id = r.id and re1.action = 'confirm_garage'
join audits a1 on a1.auditable_id = re1.id and a1.audited_changes ilike '%confirm_garage%'
                                        and a1.user_id in (select user_id from vendor_users)

join reservation_events re2 on re2.reservation_id = r.id and re2.action = 'driver_onsite'
join audits a2 on a2.auditable_id = re2.id and a2.audited_changes ilike '%driver_onsite%'
                                        and a2.user_id in (select user_id from vendor_users)

join reservation_events re3 on re3.reservation_id = r.id and re3.action = 'pickup_passenger'
join audits a3 on a3.auditable_id = re3.id and a3.audited_changes ilike '%pickup_passenger%'
                                        and a3.user_id in (select user_id from vendor_users)

join reservation_events re4 on re4.reservation_id = r.id and re4.action = 'assign_driver'
join audits a4 on a4.auditable_id = re4.id and a4.audited_changes ilike '%assign_driver%'
                                        and a4.user_id in (select user_id from vendor_users)

join reservation_events re5 on re5.reservation_id = r.id and re5.action = 'complete_trip'
join audits a5 on a5.auditable_id = re5.id and a5.audited_changes ilike '%complete_trip%'
                                        and a5.user_id in (select user_id from vendor_users)


where to_char(r.pickup_date, 'yyyy') = '2016'

),

full_portal as (
  
select 
distinct
v.id
,count(tr.id) as trips


from vendor_assignments va 
join vendors v on v.id = va.vendor_id
left join tot_rez tr on tr.id = va.reservation_id
where va.current = 't'
group by 1

  )
  
  
select

v.name
,v.id as "Vendor ID"
,pa.trips as "Portal Accepted"
,sa.trips as "Savoya Accepted"
,rt.trips as "Trip Rejections"
,pc.trips as "Portal Closed"
,sc.trips as "Savoya Closed"
,vc.trips as "Vendor Case Totals"
,coalesce((vc.trips*1.0)/(ct.trips*1.0),0) as "Case Percentage"
,(au.trips*1.0)/(ct.trips*1.0) as "App Usage"
,fp.trips as "Total Portal Trips"
,da.times as "Driver Assignment Before Pickup"
,v.email as "Email Address"


from vendors v

left join portal_accepted pa on pa.vendor_id=v.id
left join savoya_accepted sa on sa.vendor_id=v.id

left join rejected_trips rt on rt.vendor_id=v.id

left join portal_closed pc on pc.vendor_id=v.id
left join savoya_closed sc on sc.vendor_id=v.id

left join vendor_cases vc on vc.vendor_id=v.id

left join completed_trips ct on ct.vendor_id=v.id 

left join app_usage au on au.vendor_id=v.id

left join driver_assign da on da.id = v.id

left join full_portal fp on fp.id = v.id

where v.inactive = 'f' and vendor_type = 'garage'


order by 3 desc nulls last
