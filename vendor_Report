--no_cache

---total reservations ---

with short_rez as (
  
  select 
  distinct
    r.id
  , r.pickup_date
  , r.created_at
  , va.vendor_id
  
  from reservations r
  join reservation_statuses rs on rs.reservation_id = r.id and rs.canceled is not true 
                                                           and rs.status in ('billed', 'finalized', 'completed')
  join vendor_assignments va on va.reservation_id = r.id and va.current is true
  
  ),

total_trips as (
  
  select 
  
    r.vendor_id as id
  , count(distinct r.id) as trips
  
  from short_rez r 
        
  where date_trunc('month',r.pickup_date) = date_trunc('month',(current_date - interval ' 1 month'))                                                         
  group by 1                          
  
  ),

total_trips_last_month as (
  
  select 
  
    r.vendor_id as id
  , count(distinct r.id) as trips
  
  from short_rez r 
        
  where date_trunc('month',r.pickup_date) = date_trunc('month',(current_date - interval ' 2 month'))                                                         
  group by 1                        
  
  ),

total_trips_2016 as (
  
  select 
  
    r.vendor_id as id
  , count(distinct r.id) as trips
  
  from short_rez r
  
  where to_char(r.pickup_date, 'yyyy') = '2016'
                                                         
  group by 1                          
  
  ),

total_trips_2017 as (
  
  select 
  
  r.vendor_id as id
  ,count(distinct r.id) as trips
  
  from short_rez r 
  
  where to_char(r.pickup_date, 'yyyy') = '2017'
                                                         
  group by 1                          
  
  ),

--- vendor case totals ---

Vendor_cases as (
  
  select 
  
    r.vendor_id as id
  , count(distinct r.id) as trips
  ,string_agg(r.id::varchar, ', ') as cases
  ,string_agg('<A href=https://core.savoya.net/#/vendor/reservations/' || r.id || '>' || r.id || '</A>', ', ') as case_url
  
  from short_rez r
  
  join reservation_cases rc on rc.reservation_id = r.id and rc.vendor_fault = 't'
  join audits a on a.auditable_id = rc.id and auditable_type = 'ReservationCase' and a.user_id not in (24810,29002)
  
  where date_trunc('month',r.pickup_date) = date_trunc('month',(current_date - interval ' 1 month'))
  and description not like ('Mobile enabled driver did not use app')

  group by 1
  
  ),


Vendor_cases_last_month as (
  
  select 
  
    r.vendor_id as id
  , count(distinct r.id) as trips
  
  from short_rez r
  
  join reservation_cases rc on rc.reservation_id = r.id and rc.vendor_fault = 't'
  
  where date_trunc('month',r.pickup_date) = date_trunc('month',(current_date - interval ' 2 month'))
  and description not like ('Mobile enabled driver did not use app')
  group by 1
  
  ),


Vendor_cases_2016 as (
  
  select 
  
    r.vendor_id as id
  , count(distinct r.id) as trips
  
  from short_rez r
  
  join reservation_cases rc on rc.reservation_id = r.id and rc.vendor_fault = 't'
 
  where to_char(r.pickup_date, 'yyyy') = '2016'
    and description not like ('Mobile enabled driver did not use app')
  group by 1
  
  ),

Vendor_cases_2017 as (
  
  select 
  
  r.vendor_id as id
  ,count(distinct r.id) as trips
  
  from short_rez r
  
  join reservation_cases rc on rc.reservation_id = r.id and rc.vendor_fault = 't'
 
  where to_char(r.pickup_date, 'yyyy') = '2017'
    and description not like ('Mobile enabled driver did not use app')
  group by 1
  
  ),

 --- Core managed trips ---
---removed per david - 8.9.17 --
/*last_action as (
  select 

  max(re.id) as id
, action
, reservation_id

from reservation_events re 

where re.action in ('drop_passenger', 'confirm_garage', 'pickup_passenger', 'assign_driver', 'complete_trip', 'closeout')
group by 2,3
  
  ),

checked_rez as (

select 

reservation_id
, count(a.id) as total

from last_action l

left join audits a on a.auditable_id = l.id and a.auditable_type = 'ReservationEvent' 
and (a.user_id in (select user_id from vendor_users) or a.user_id in (select id from users where role = 'driver')) 
group by 1
  
  ),

tot_rez as (

select 

  reservation_id as id
, r.pickup_date
, r.vendor_id  
  from checked_rez c
  
  join short_rez r on r.id = c.reservation_id
  
  where total = 6
  
),

full_portal as (
  
select 

r.vendor_id as id
,count(distinct r.id) as trips

from tot_rez r  

where date_trunc('month',r.pickup_date) = date_trunc('month',(current_date - interval ' 1 month'))

group by 1

  ),
  
full_portal_last_month as (
  
select 

r.vendor_id as id
,count(distinct r.id) as trips

from tot_rez r 
     
where date_trunc('month',r.pickup_date) = date_trunc('month',(current_date - interval ' 2 month'))
  
group by 1

  ),
    
full_portal_2016 as (
  
select 

r.vendor_id as id
,count(distinct r.id) as trips

from tot_rez r 
  
where to_char(r.pickup_date, 'yyyy') = '2016'

group by 1

  ),
  
  full_portal_2017 as (
  
select 

r.vendor_id as id
,count(distinct r.id) as trips

from tot_rez r 
  
where to_char(r.pickup_date, 'yyyy') = '2017'

group by 1

  ),
    */ 

--- drivre assignment time ---
last_assign as (
  
  select 
  
  re.reservation_id as id
  ,max(updated_at) as updated_at
  
  from reservation_events re
  where action = 'assign_driver'
  
  group by 1
  
  ),

driver_assign as (

  select 

  r.vendor_id as id
  ,count(case when r.pickup_date - la.updated_at > '06:00:00' then 1 end) as trips
  ,coalesce(Count(case when r.pickup_date - r.created_at < '06:00:00' then 1 end),0) as asaps  

  from short_rez r 
  join last_assign la on la.id=r.id


  where date_trunc('month',r.pickup_date) = date_trunc('month',(current_date - interval ' 1 month'))
  
  group by 1

  ),

driver_assign_last_month as (
  
  select 

  r.vendor_id as id
  ,count(case when r.pickup_date - la.updated_at > '06:00:00' then 1 end) as trips
  ,coalesce(Count(case when r.pickup_date - r.created_at < '06:00:00' then 1 end),0) as asaps  

  from short_rez r 
  join last_assign la on la.id=r.id


  where date_trunc('month',r.pickup_date) = date_trunc('month',(current_date - interval ' 2 month'))
  
  group by 1

  ),
  
driver_assign_2017 as (

  select 

 r.vendor_id as id
 ,count(case when r.pickup_date - la.updated_at > '06:00:00' then 1 end) as trips
 ,coalesce(Count(case when r.pickup_date - r.created_at < '06:00:00' then 1 end),0) as asaps

 from short_rez r 
 join last_assign la on la.id=r.id


 where to_char(r.pickup_date, 'yyyy') = '2017'

 group by 1

),


driver_assign_2016 as (
  
  select 

 r.vendor_id as id
 ,count(case when r.pickup_date - la.updated_at > '06:00:00' then 1 end) as trips
 ,coalesce(Count(case when r.pickup_date - r.created_at < '06:00:00' then 1 end),0) as asaps

 from short_rez r 
 join last_assign la on la.id=r.id


 where to_char(r.pickup_date, 'yyyy') = '2016'

 group by 1

),

--- Driver App Usage ---
---- removed per david 8.9.17----
/*
driver_app as (
  
  select
  r.vendor_id as id
  ,count(distinct r.id) as trips
  
 from short_rez r
  join vendors v on r.vendor_id = v.id and v.mobile_enabled is true       
  join reservation_events enr on r.id = enr.reservation_id and action in ('en_route')
  where date_trunc('month',r.pickup_date) = date_trunc('month',(current_date - interval '1 month'))
         
  group by 1
  ),

driver_app_last_month as (
  
  select
  r.vendor_id as id
  ,count(distinct r.id) as trips
  
 from short_rez r
  join vendors v on r.vendor_id = v.id and v.mobile_enabled is true       
  join reservation_events enr on r.id = enr.reservation_id and action in ('en_route')
  where date_trunc('month',r.pickup_date) = date_trunc('month',(current_date - interval '2 month'))
         
  group by 1
  ),

driver_app_2016 as (
  
  select
  r.vendor_id as id
  ,count(distinct r.id) as trips
  
 from short_rez r
  join vendors v on r.vendor_id = v.id and v.mobile_enabled is true       
  join reservation_events enr on r.id = enr.reservation_id and action in ('en_route')
  where to_char(r.pickup_date, 'yyyy') = '2016'
         
  group by 1
  ),


driver_app_2017 as (
  
  select
  r.vendor_id as id
  ,count(distinct r.id) as trips
  
 from short_rez r
  join vendors v on r.vendor_id = v.id and v.mobile_enabled is true       
  join reservation_events enr on r.id = enr.reservation_id and action in ('en_route')
  where to_char(r.pickup_date, 'yyyy') = '2017'
         
  group by 1
  ),

--- Vendor Portal Closed ---

portal as (
  
  select 
  
  r.vendor_id as id
  ,count(distinct re.reservation_id) as trips
  
  from short_rez r
  
  join reservation_events re on re.reservation_id = r.id and re.action = 'closeout'
  join audits a on a.auditable_id = re.id   and a.auditable_type = 'ReservationEvent'
    and (a.user_id in (select user_id from vendor_users) or a.user_id in (select id from users where role = 'driver'))

  where date_trunc('month',r.pickup_date) = date_trunc('month',(current_date - interval '1 month'))
  
   group by 1
  
),

portal_last_month as (

  select 
  
  r.vendor_id as id
  ,count(distinct re.reservation_id) as trips
  
  from short_rez r
  
  join reservation_events re on re.reservation_id = r.id and re.action = 'closeout'
  join audits a on a.auditable_id = re.id   and a.auditable_type = 'ReservationEvent'
    and (a.user_id in (select user_id from vendor_users) or a.user_id in (select id from users where role = 'driver'))

  where date_trunc('month',r.pickup_date) = date_trunc('month',(current_date - interval '2 month'))
  
   group by 1
  
),

portal_2016 as (
  
  select 
  
  r.vendor_id as id
  ,count(distinct re.reservation_id) as trips
  
  from short_rez r
  
  join reservation_events re on re.reservation_id = r.id and re.action = 'closeout'
  join audits a on a.auditable_id = re.id  and a.auditable_type = 'ReservationEvent' 
    and (a.user_id in (select user_id from vendor_users) or a.user_id in (select id from users where role = 'driver'))

  where to_char(r.pickup_date, 'yyyy') = '2016'
  
   group by 1
  
),

portal_2017 as (
  
  select 
  
  r.vendor_id as id
  ,count(distinct re.reservation_id) as trips
  
  from short_rez r
  
  join reservation_events re on re.reservation_id = r.id and re.action = 'closeout'
  join audits a on a.auditable_id = re.id and a.auditable_type = 'ReservationEvent'  
    and (a.user_id in (select user_id from vendor_users) or a.user_id in (select id from users where role = 'driver'))

  where to_char(r.pickup_date, 'yyyy') = '2017'
  
   group by 1
  
),
*/
auto as (
  
  select 
  
  r.vendor_id as id
  ,count(distinct re.reservation_id) as trips
  
  from short_rez r
  
  join reservation_events re on re.reservation_id = r.id and re.action = 'closeout'
  join audits a on a.auditable_id = re.id and a.auditable_type = 'ReservationEvent'
    and a.user_id is null

  where date_trunc('month',r.pickup_date) = date_trunc('month',(current_date - interval '1 month'))
  
   group by 1
  
  ),

auto_last_month as (
  
  select 
  
  r.vendor_id as id
  ,count(distinct re.reservation_id) as trips
  
  from short_rez r
  
  join reservation_events re on re.reservation_id = r.id and re.action = 'closeout'
  join audits a on a.auditable_id = re.id and a.auditable_type = 'ReservationEvent'
    and a.user_id is null

  where date_trunc('month',r.pickup_date) = date_trunc('month',(current_date - interval '2 month'))
  
   group by 1
  
  ),

auto_2016 as (
  
  select 
  
  r.vendor_id as id
  ,count(distinct re.reservation_id) as trips
  
  from short_rez r
  
  join reservation_events re on re.reservation_id = r.id and re.action = 'closeout'
  join audits a on a.auditable_id = re.id and a.auditable_type = 'ReservationEvent'
    and a.user_id is null

  where to_char(r.pickup_date, 'yyyy') = '2016'
  
   group by 1
  
  ),

auto_2017 as (
  
  select 
  
  r.vendor_id as id
  ,count(distinct re.reservation_id) as trips
  
  from short_rez r
  
  join reservation_events re on re.reservation_id = r.id and re.action = 'closeout'
  join audits a on a.auditable_id = re.id and a.auditable_type = 'ReservationEvent'
    and a.user_id is null

  where to_char(r.pickup_date, 'yyyy') = '2017'
  
   group by 1
  
  ),

veh_assignment as (
  
  select

    va.vendor_id as id
  , count(most_recent_vehicle.id) as trips
  , count(most_recent_vehicle.id)::numeric / count(r.id) as pct
from short_rez r
join vendor_assignments va on va.reservation_id = r.id and current is true
  left join (select max(updated_at), vendor_assignment_id as id from vehicle_assignments group by 2) as most_recent_vehicle
    on va.id = most_recent_vehicle.id

where date_trunc('month',r.pickup_date) = date_trunc('month',(current_date - interval ' 1 month'))

group by 1
  
  ),

veh_assignment_last_month as (
  
  select

    va.vendor_id as id
  , count(most_recent_vehicle.id) as trips
  , count(most_recent_vehicle.id)::numeric / count(r.id) as pct
from short_rez r
join vendor_assignments va on va.reservation_id = r.id and current is true
  left join (select max(updated_at), vendor_assignment_id as id from vehicle_assignments group by 2) as most_recent_vehicle
    on va.id = most_recent_vehicle.id

where date_trunc('month',r.pickup_date) = date_trunc('month',(current_date - interval ' 2 month'))

group by 1
  
  ),

veh_assignment_2017 as (
  
  select

    va.vendor_id as id
  , count(most_recent_vehicle.id) as trips
  , count(most_recent_vehicle.id)::numeric / count(r.id) as pct
from short_rez r
join vendor_assignments va on va.reservation_id = r.id and current is true
  left join (select max(updated_at), vendor_assignment_id as id from vehicle_assignments group by 2) as most_recent_vehicle
    on va.id = most_recent_vehicle.id

where to_char(r.pickup_date, 'yyyy') = '2017'

group by 1
  
  )

Select

v.name

,t.trips as "Total Trips"
,tm.trips as "Total Trips Last Month"
,ty.trips as "Total Trips YTD"
,t16.trips as "Total Trips 2016"

,c.trips as "Service Deviation Count"
,(c.trips*1.00)/(t.trips*1.00) as "Deviations Percentage"
,cm.trips as "Service Deviation - Previous Month"
,(cm.trips*1.00)/(tm.trips*1.00) as "Deviations Percentage - Previous Month"
,cy.trips as "Service Deviation YTD"
,(cy.trips*1.00)/(ty.trips*1.00) as "Deviations Percentage YTD"
,c16.trips as "Service Deviation 2016"
,(c16.trips*1.00)/(t16.trips*1.00) as "Deviations Percentage 2016"

/*

,f.trips as "Core Managed Trips Count"
,(f.trips*1.00)/(t.trips*1.00) as "Core Managed Percentage"
,fm.trips as "Core Managed Trips - Previous Month"
,(fm.trips*1.00)/(tm.trips*1.00) as "Core Managed Percentage - Previous Month"
,fy.trips as "Core Managed Trips YTD"
,(fy.trips*1.00)/(ty.trips*1.00) as "Core Managed Percentage YTD"
,f16.trips as "Core Managed Trips 2016"
,(f16.trips*1.00)/(t16.trips*1.00) as "Core Managed Percentage 2016"

*/

,d.trips as "Driver Assigned On Time Count"
,case when (t.trips - d.asaps) <= 0 then 1 
else (d.trips*1.00)/((t.trips - d.asaps)*1.00) end as "Driver Assigned Percentage"
,dm.trips as "Driver Assigned On Time - Previous Month"
,case when (tm.trips - dm.asaps) <= 0 then 1 else
(dm.trips*1.00)/((tm.trips-dm.asaps)*1.00) end as "Driver Assigned Percentage - Previous Month"
,dy.trips as "Driver Assigned On Time YTD"
,case when (ty.trips - dy.asaps) <= 0 then 1 else
(dy.trips*1.00)/((ty.trips-dy.asaps)*1.00) end as "Driver Assigned Percentage YTD"
,d16.trips as "Driver Assigned On Time 2016"
,case when (t16.trips - d16.asaps) <= 0 then 1 else
(d16.trips*1.00)/((t16.trips-d16.asaps)*1.00) end as "Driver Assigned Percentage 2016"

/*
,a.trips as "Driver App Used Count"
,(a.trips*1.00)/(t.trips*1.00) as "Driver App Percentage"
,am.trips as "Driver App Used - Previous Month"
,(am.trips*1.00)/(tm.trips*1.00) as "Driver App Percentage - Previous Month"
,ay.trips as "Driver App Used YTD"
,(ay.trips*1.00)/(ty.trips*1.00) as "Driver App Percentage YTD"
,a16.trips as "Driver App Used 2016"
,(a16.trips*1.00)/(t16.trips*1.00) as "Driver App Percentage 2016"
*/
/*
,p.trips as "Portal Closed Count"
,(p.trips*1.00)/(t.trips*1.00) as "Portal Closed Percentage"
,pm.trips as "Portal Closed - Previous Month"
,(pm.trips*1.00)/(tm.trips*1.00) as "Portal Closed Percentage - Previous Month"
,py.trips as "Portal Closed YTD"
,(py.trips*1.00)/(ty.trips*1.00) as "Portal Closed Percentage YTD"
,p16.trips as "Portal Closed 2016"
,(p16.trips*1.00)/(t16.trips*1.00) as "Portal Closed Percentage 2016"
*/
,s.trips as "Auto Closed Count"
,(s.trips*1.00)/(t.trips*1.00) as "Auto Closed Percentage"
,sm.trips as "Auto Closed - Previous Month"
,(sm.trips*1.00)/(tm.trips*1.00) as "Auto Closed Percentage - Previous Month"
,sy.trips as "Auto Closed YTD"
,(sy.trips*1.00)/(ty.trips*1.00) as "Auto Closed Percentage YTD"
,s16.trips as "Auto Closed 2016"
,(s16.trips*1.00)/(t16.trips*1.00) as "Auto Closed Percentage 2016"

,v.email as "Vendor Email"

,to_char((current_date - interval '1 month'), 'Month, YYYY') as "Report Date"
,d.asaps
,v.owner_email
,c.cases
,c.case_url

,veh.trips as "Vehicle Assignment"
,veh.pct as "Vehicle Assignment Percentage"
,vehm.trips as "Vehicle Assignment - Previous Month"
,vehm.pct as "Vehicle Assignment Percentage - Previous Month"
,veh17.trips as "Vehicle Assignment YTD"
,veh17.pct as "Vehicle Assignment Percentage YTD"

,vendor_type
,owner_first_name 

from vendors v

left join total_trips t on t.id = v.id
left join total_trips_last_month tm on tm.id = v.id
left join total_trips_2016 t16 on t16.id = v.id
left join total_trips_2017 ty on ty.id = v.id

left join vendor_cases c on c.id = v.id
left join vendor_cases_last_month cm on cm.id = v.id
left join vendor_cases_2016 c16 on c16.id = v.id
left join vendor_cases_2017 cy on cy.id = v.id
/*  
left join full_portal f on f.id = v.id
left join full_portal_last_month fm on fm.id = v.id
left join full_portal_2016 f16 on f16.id = v.id
left join full_portal_2017 fy on fy.id = v.id
*/
left join driver_assign d on d.id = v.id
left join driver_assign_last_month dm on dm.id = v.id
left join driver_assign_2016 d16 on d16.id = v.id
left join driver_assign_2017 dy on dy.id = v.id
/*
left join driver_app a on a.id = v.id
left join driver_app_last_month am on am.id = v.id
left join driver_app_2016 a16 on a16.id = v.id
left join driver_app_2017 ay on ay.id = v.id
*/
/*
left join portal p on p.id = v.id
left join portal_last_month pm on pm.id = v.id
left join portal_2016 p16 on p16.id = v.id
left join portal_2017 py on py.id = v.id
*/
left join auto s on s.id = v.id
left join auto_last_month sm on sm.id = v.id
left join auto_2016 s16 on s16.id = v.id
left join auto_2017 sy on sy.id = v.id

left join veh_assignment veh on veh.id = v.id
left join veh_assignment_last_month vehm on vehm.id = v.id
left join veh_assignment_2017 veh17 on veh17.id = v.id
  
  


where v.vendor_type in ('garage','independent')
                               and v.inactive is not true 
                               and left(v.name, 6) <> 'Savoya' 
                               and v.id not in (21110) 
                               --and left(v.name, 3) <> 'I/O'  

order by 4 desc nulls last

limit 180
