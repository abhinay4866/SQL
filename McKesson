--no_cache

with res_stops as (
  
  select
   r.id as id
  ,count(s.id) as trips
  
  from reservations r 
  left join stops s on s.reservation_id = r.id and location_type = 'stop_location'
  
  group by 1

  ),

rez_pax as (
  
  select   max(first_name || ' ' || last_name) as pax
          ,guests + 1 as guests
          ,reservation_id as id
from passengers p
join reservation_passengers rp on rp.passenger_id = p.id
group by 2,3
  )


select  
distinct
 r.id as "RESERVATIONS"
,c.name as "COMPANY"
,to_char(r.pickup_date, 'mm/dd/yyyy') as "PICKUP DATE"
,to_char(r.pickup_date:: timestamp at time zone 'UTC' at time zone ploc.timezone, 'hh24mi')   as "LOCAL PICKUP TIME"
,to_char(dt.client_date:: timestamp at time zone 'UTC' at time zone ploc.timezone, 'hh24mi') as "LOCAL DROPOFF TIME"
,rp.pax as "LEAD PASSENGER"
,tc.first_name || ' ' || tc.last_name as "TRAVEL COORDINATOR"
,rp.guests as "PASSENGER COUNT"
,case 
  when ploc.address is null then ploc.name
  else ploc.address end as "PICKUP ADDRESS"
,case 
  when dloc.address is null then dloc.name
  else dloc.address end as "DROPOFF LOCATION"
,aa.iata_code || af.flight_number as "ARRIVAL AIRLINE"
,da.iata_code || df.flight_number as "DEPARTURE AIRLINE"
,s.trips as "STOPS"
,case
  when af.private = 't' or df.private = 't' then 'Private'
  else 'Commercial'
  end as "PRIVATE FLIGHT"
,sa.name as "PICKUP ADRESS CITY"
,v.name as "VEHICLE"
,(r.final_amount-coalesce(rf.amount,0))/100.00 as "TOTAL CHARGE"
,((r.final_amount-coalesce(rf.amount,0))/3)/100.00 as "COST SAVINGS"

from reservations r

join service_areas sa on sa.id = r.service_area_id

join travel_coordination_profile_assignments tca on tca.reservation_id = r.id
join travel_coordination_profiles tc on tc.id = tca.travel_coordination_profile_id
join companies c on c.id = tc.company_id and [c.id=company]

join rez_pax rp on rp.id = r.id

join vehicle_types v on v.id = r.vehicle_type_id

join reservation_statuses rs on rs.reservation_id = r.id and rs.canceled = 'f' and rs.status= 'finalized'
                                     
join stops pstop on r.id = pstop.reservation_id and pstop.location_type = 'pickup_location'
join locations ploc on pstop.location_id = ploc.id

join stops dstop on r.id = dstop.reservation_id and dstop.location_type = 'dropoff_location'
join locations dloc on dstop.location_id = dloc.id

/*left join stops pl on pl.reservation_id = r.id and pl.location_type = 'pickup_location'
left join stops dl on dl.reservation_id = r.id and dl.location_type = 'dropoff_location'
*/
left join flights af on af.stop_id = pstop.id 
left join flights df on df.stop_id = dstop.id

left join airlines aa on aa.id = af.airline_id
left join airlines da on da.id = df.airline_id

left join reservation_events dp on dp.reservation_id = r.id 
                                and action = 'drop_passenger'
                                and dp.updated_at is not null

left join res_stops s on s.id = r.id 

left join compensations cp on cp.reservation_id = r.id
left join refunds rf on rf.reservation_id = r.id

left join date_adjustments dt on dt.reservation_id = r.id and dt.type = 'DropoffDateAdjustment'

where date_trunc('year', r.pickup_date) = date_trunc('year', '3/3/2016'::date)

order by 3,4
